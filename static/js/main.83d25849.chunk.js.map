{"version":3,"sources":["ProbabilityCalculatorApp.tsx","calculator/probabilityCalculations.ts","theme/index.ts","index.tsx"],"names":["ProbabilityCalculatorApp","useState","calculationResult","setCalculationResult","useForm","handleSubmit","control","formState","errors","Container","maxWidth","Typography","align","variant","onSubmit","x","y","probabilityA","probabilityB","functionType","parseFloat","name","rules","min","max","required","render","field","TextField","label","id","type","select","MenuItem","value","Button","theme","createMuiTheme","typography","htmlFontSize","props","MuiTextField","MuiCard","responsiveFontSizes","ReactDOM","CssBaseline","ThemeProvider","document","getElementById"],"mappings":"uQAyFeA,EAxEkB,WAC/B,MACEC,mBAAwB,MAD1B,mBAAOC,EAAP,KAA0BC,EAA1B,KAGA,EAKIC,cAJFC,EADF,EACEA,aACAC,EAFF,EAEEA,QAFF,EAIEC,UAAaC,OAaf,OACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAnC,oCAGA,uBAAMC,SAAUT,GAfH,SAAC,GAIW,IChCKU,EAAWC,ED6B3CC,EAG0B,EAH1BA,aACAC,EAE0B,EAF1BA,aAE0B,EAD1BC,aAEAhB,GCjCgCY,EDkCVK,WAAWH,GClCUD,EDkCKI,WAAWF,GClCMH,EAAIC,OD2CnE,UACE,cAAC,IAAD,CACEK,KAAK,eACLf,QAASA,EACTgB,MAAO,CAAEC,IAAK,EAAGC,IAAK,EAAGC,UAAU,GACnCC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,gBACNC,GAAG,eACHC,KAAK,eAIX,cAAC,IAAD,CACEV,KAAK,eACLf,QAASA,EACTgB,MAAO,CAAEC,IAAK,EAAGC,IAAK,EAAGC,UAAU,GACnCC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,gBACNC,GAAG,eACHC,KAAK,eAIX,cAAC,IAAD,CACEV,KAAK,eACLf,QAASA,EACTgB,MAAO,CAAEG,UAAU,GACnBC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAsBG,GAAG,eAAeD,MAAM,WAAWG,QAAM,EAA/D,SACE,cAACC,EAAA,EAAD,CAAUC,MAAM,eAAhB,gCAKN,cAACC,EAAA,EAAD,CAAQJ,KAAK,SAAb,0BAGF,eAACpB,EAAA,EAAD,sBAAqBT,S,iBElFvBkC,EAAQC,YAAe,CACzBC,WAAY,CACVC,aAAc,IAEhBC,MAAO,CACLC,aAAc,CACZ5B,QAAS,YAEX6B,QAAS,CACP7B,QAAS,eAOAuB,EAFfA,EAAQO,YAAoBP,GCT5BQ,IAASlB,OACP,eAAC,aAAD,WACE,cAACmB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAeV,MAAOA,EAAtB,SACE,cAAC,EAAD,SAGJW,SAASC,eAAe,W","file":"static/js/main.83d25849.chunk.js","sourcesContent":["import {\n  Typography,\n  Container,\n  TextField,\n  Button,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { combinedProbability } from \"./calculator/probabilityCalculations\";\nimport { Controller, useForm } from \"react-hook-form\";\n\ninterface ICalculatorFormInput {\n  probabilityA: string;\n  probabilityB: string;\n  functionType: string;\n}\n\nconst ProbabilityCalculatorApp = () => {\n  const [calculationResult, setCalculationResult] =\n    useState<number | null>(null);\n\n  const {\n    handleSubmit,\n    control,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    formState: { errors },\n  } = useForm<ICalculatorFormInput>();\n\n  const onSubmit = ({\n    probabilityA,\n    probabilityB,\n    functionType,\n  }: ICalculatorFormInput) => {\n    setCalculationResult(\n      combinedProbability(parseFloat(probabilityA), parseFloat(probabilityB))\n    );\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Typography align=\"center\" variant=\"h1\">\n        Probability Calculator\n      </Typography>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Controller\n          name=\"probabilityA\"\n          control={control}\n          rules={{ min: 0, max: 1, required: true }}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Probability A\"\n              id=\"probabilityA\"\n              type=\"number\"\n            />\n          )}\n        />\n        <Controller\n          name=\"probabilityB\"\n          control={control}\n          rules={{ min: 0, max: 1, required: true }}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Probability B\"\n              id=\"probabilityB\"\n              type=\"number\"\n            />\n          )}\n        />\n        <Controller\n          name=\"functionType\"\n          control={control}\n          rules={{ required: true }}\n          render={({ field }) => (\n            <TextField {...field} id=\"functionType\" label=\"Function\" select>\n              <MenuItem value=\"combinedWith\">CombinedWith</MenuItem>\n            </TextField>\n          )}\n        />\n\n        <Button type=\"submit\">Calculate</Button>\n      </form>\n\n      <Typography>Result: {calculationResult}</Typography>\n    </Container>\n  );\n};\n\nexport default ProbabilityCalculatorApp;\n","export const combinedProbability = (x: number, y: number): number => x * y;\n\nexport const eitherProbability = (x: number, y: number): number =>\n  x + y - x * y;\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\n\nlet theme = createMuiTheme({\n  typography: {\n    htmlFontSize: 10,\n  },\n  props: {\n    MuiTextField: {\n      variant: \"outlined\",\n    },\n    MuiCard: {\n      variant: \"outlined\",\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ProbabilityCalculatorApp from \"./ProbabilityCalculatorApp\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <StrictMode>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <ProbabilityCalculatorApp />\n    </ThemeProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}